#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import yaml
import netifaces
from infrasim import ipmi, socat, run_command, run_command_anyway, qemu, CommandRunFailed, ArgsNotCorrect, has_option

INFRASIM_CONF = "/etc/infrasim/infrasim.yml"

if __name__ == '__main__':

    with open(INFRASIM_CONF, 'r') as f_yml:
        conf = yaml.load(f_yml)

    node = ""
    eth = ""

    if has_option(conf, "type"):
        node = conf["type"]
    else:
        print "Can't get infrasim type.\n" \
              "Please check infrasim configure file: {}".format(INFRASIM_CONF)
        sys.exit(-1)

    try:
        eth = conf["compute"]["networks"][0]["network_name"]
    except TypeError:
        print "Attribute missing from infrasim node network.\n" \
              "Please check infrasim configure file: {}".format(INFRASIM_CONF)
        sys.exit(-1)
    except KeyError:
        print "Can't get infrasim node network.\n" \
              "Please check infrasim configure file: {}".format(INFRASIM_CONF)
        sys.exit(-1)

    try:
        if len(sys.argv) < 2:
            print "{} start|stop|status|restart".format(sys.argv[0])
            sys.exit(0)

        if sys.argv[1] == "start":
            socat.start_socat()
            ipmi.start_ipmi()
            print "Infrasim service started.\n" \
              "You can access virtual {} via vnc:{}:5901".format(node, netifaces.ifaddresses(eth)[netifaces.AF_INET][0]['addr'])
        elif sys.argv[1] == "stop":
            qemu.stop_qemu()
            ipmi.stop_ipmi()
            socat.stop_socat()
            print "Infrasim Service stopped"
        elif sys.argv[1] == "status":
            qemu.status_qemu()
            ipmi.status_ipmi()
            socat.status_socat()
        elif sys.argv[1] == "restart":
            qemu.stop_qemu()
            ipmi.stop_ipmi()
            socat.stop_socat()
            print "Restart InfraSIM service..."
            socat.start_socat()
            ipmi.start_ipmi()
        elif sys.argv[1] == "version":
            print "Kernel:  ", run_command("uname -sr")[1].split('\n')[0]
            print "Base OS: ", run_command("cat /etc/issue")[1].split('\\')[0]
            print "QEMU:    ", run_command("qemu-system-x86_64 --version")[1].split(',')[0]
            print "OpenIPMI:", run_command_anyway("ipmi_sim -v")[1].split('\n')[0]
            print "Socat:   ", ' '.join(run_command("socat -V")[1].split('\n')[1].split(' ')[0:3])
            print "InfraSIM:"
        else:
            print "{} start|stop|status|restart".format(sys.argv[0])
    except CommandRunFailed as e:
        print "{} run failed\n".format(e.value)
        print "Infrasim-main starts failed"
    except ArgsNotCorrect as e:
        print "{} args is incorrect".format(e.value)
        print "infrasim-main starts failed"
